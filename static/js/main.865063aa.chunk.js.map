{"version":3,"sources":["Assets/beeps.mp3","Components/Config.js","Components/Timer.js","Components/Buttons.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Config","changeHandler","event","console","log","target","value","name","Number","props","updateConfig","config","numberOfExercises","this","durationOfExercises","durationOfBreak","numberOfSets","breakBetweenSets","style","maxWidth","margin","textAlign","styles","inputGroup","label","display","alignItems","justifyContent","buttonLarge","onClick","decreaseNumberOfExercises","bind","class","inputLarge","onChange","increaseNumberOfExercises","smallLabel","marginBottom","width","button","decreaseDurationOfExercises","input","increaseDurationOfExercises","decreaseDurationOfBreak","increaseDurationOfBreak","decreaseNumberOfSets","increaseNumberOfSets","decreaseBreakBetweenSets","increaseBreakBetweenSets","startButton","handleStart","React","Component","texAlign","fontSize","letterSpacing","color","fontWeight","textTransform","backgroundColor","border","outline","cursor","borderRadius","padding","momentDurationFormatSetup","moment","Timer","state","totalTimeRemaining","overallTimePercentage","activityTimeRemaining","duration","timestamps","activityTimestamps","endTime","diff","startTime","format","trim","activityTimePercentage","currentActivity","nextActivity","playBeeps","progressBarReset","updateDisplay","setState","isRunning","interval","setInterval","now","overallEndingTime","handleStop","isBefore","i","activityTimes","length","isAfter","currentActivityDuration","asSeconds","url","beeps","playStatus","Sound","status","PLAYING","volume","isMuted","onFinishedPlaying","endBeeps","autoLoad","type","position","height","flexDirection","left","top","bottom","transition","set","zIndex","marginTop","Buttons","right","toggleMute","marginLeft","App","noSleep","NoSleep","isPaused","currentProgressTimer","currentExercise","generateTimestamps","enable","disable","n","totalTimeOfActivity","totalTimeOfSet","totalTime","add","push","breakEndTime","restStartTime","restEndTime","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.865063aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beeps.35c4e33a.mp3\";","import React from \"react\";\n\nclass Config extends React.Component {\n  changeHandler = (event) => {\n    console.log(event.target.value);\n    const name = event.target.name;\n    const value = Number(event.target.value);\n\n    this.props.updateConfig({ ...this.props.config, [name]: value });\n  };\n\n  increaseNumberOfExercises() {\n    let numberOfExercises = this.props.config.numberOfExercises;\n    this.props.updateConfig({\n      ...this.props.config,\n      numberOfExercises: numberOfExercises + 1,\n    });\n  }\n\n  decreaseNumberOfExercises() {\n    let numberOfExercises = this.props.config.numberOfExercises;\n    this.props.updateConfig({\n      ...this.props.config,\n      numberOfExercises: numberOfExercises - 1,\n    });\n  }\n\n  increaseDurationOfExercises() {\n    let durationOfExercises = this.props.config.durationOfExercises;\n    this.props.updateConfig({\n      ...this.props.config,\n      durationOfExercises: durationOfExercises + 5,\n    });\n  }\n\n  decreaseDurationOfExercises() {\n    let durationOfExercises = this.props.config.durationOfExercises;\n    this.props.updateConfig({\n      ...this.props.config,\n      durationOfExercises: durationOfExercises - 5,\n    });\n  }\n\n  increaseDurationOfBreak() {\n    let durationOfBreak = this.props.config.durationOfBreak;\n    this.props.updateConfig({\n      ...this.props.config,\n      durationOfBreak: durationOfBreak + 5,\n    });\n  }\n\n  decreaseDurationOfBreak() {\n    let durationOfBreak = this.props.config.durationOfBreak;\n    this.props.updateConfig({\n      ...this.props.config,\n      durationOfBreak: durationOfBreak - 5,\n    });\n  }\n\n  increaseNumberOfSets() {\n    let numberOfSets = this.props.config.numberOfSets;\n    this.props.updateConfig({\n      ...this.props.config,\n      numberOfSets: numberOfSets + 1,\n    });\n  }\n\n  decreaseNumberOfSets() {\n    let numberOfSets = this.props.config.numberOfSets;\n    this.props.updateConfig({\n      ...this.props.config,\n      numberOfSets: numberOfSets - 1,\n    });\n  }\n\n  increaseBreakBetweenSets() {\n    let breakBetweenSets = this.props.config.breakBetweenSets;\n    this.props.updateConfig({\n      ...this.props.config,\n      breakBetweenSets: breakBetweenSets + 5,\n    });\n  }\n\n  decreaseBreakBetweenSets() {\n    let breakBetweenSets = this.props.config.breakBetweenSets;\n    this.props.updateConfig({\n      ...this.props.config,\n      breakBetweenSets: breakBetweenSets - 5,\n    });\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          maxWidth: \"30em\",\n          margin: \"3em auto\",\n        }}\n      >\n        <h1 style={{ textAlign: \"center\" }}>Exercise Timer</h1>\n        <div style={styles.inputGroup}>\n          <label style={styles.label}>Exercises</label>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button\n              style={styles.buttonLarge}\n              onClick={this.decreaseNumberOfExercises.bind(this)}\n            >\n              –\n            </button>\n            <input\n              class=\"monospace\"\n              style={styles.inputLarge}\n              name=\"numberOfExercises\"\n              value={this.props.config.numberOfExercises}\n              onChange={this.changeHandler}\n            ></input>\n            <button\n              style={styles.buttonLarge}\n              onClick={this.increaseNumberOfExercises.bind(this)}\n            >\n              +\n            </button>\n          </div>\n          <span style={styles.smallLabel}>Per Set</span>\n        </div>\n        <div style={{ display: \"flex\", marginBottom: 50 }}>\n          <div style={{ width: \"50%\" }}>\n            <label style={styles.label}>Work</label>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <button\n                style={styles.button}\n                onClick={this.decreaseDurationOfExercises.bind(this)}\n              >\n                –\n              </button>\n              <input\n                class=\"monospace\"\n                style={styles.input}\n                name=\"durationOfExercises\"\n                value={this.props.config.durationOfExercises}\n                onChange={this.changeHandler}\n              ></input>\n              <button\n                style={styles.button}\n                onClick={this.increaseDurationOfExercises.bind(this)}\n              >\n                +\n              </button>\n            </div>\n            <span style={styles.smallLabel}>Seconds</span>\n          </div>\n          <div style={{ width: \"50%\" }}>\n            <label style={styles.label}>Break</label>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <button\n                style={styles.button}\n                onClick={this.decreaseDurationOfBreak.bind(this)}\n              >\n                –\n              </button>\n              <input\n                class=\"monospace\"\n                style={styles.input}\n                name=\"durationOfBreak\"\n                value={this.props.config.durationOfBreak}\n                onChange={this.changeHandler}\n              ></input>\n              <button\n                style={styles.button}\n                onClick={this.increaseDurationOfBreak.bind(this)}\n              >\n                +\n              </button>\n            </div>\n            <span style={styles.smallLabel}>Seconds</span>\n          </div>\n        </div>\n        <div style={{ display: \"flex\", marginBottom: 50 }}>\n          <div style={{ width: \"50%\" }}>\n            <label style={styles.label}>Sets</label>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <button\n                style={styles.button}\n                onClick={this.decreaseNumberOfSets.bind(this)}\n              >\n                –\n              </button>\n              <input\n                class=\"monospace\"\n                style={styles.input}\n                name=\"numberOfSets\"\n                value={this.props.config.numberOfSets}\n                onChange={this.changeHandler}\n              ></input>\n              <button\n                style={styles.button}\n                onClick={this.increaseNumberOfSets.bind(this)}\n              >\n                +\n              </button>\n            </div>\n          </div>\n          <div style={{ width: \"50%\" }}>\n            <label style={styles.label}>Break between sets</label>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <button\n                style={styles.button}\n                onClick={this.decreaseBreakBetweenSets.bind(this)}\n              >\n                –\n              </button>\n              <input\n                class=\"monospace\"\n                style={styles.input}\n                name=\"breakBetweenSets\"\n                value={this.props.config.breakBetweenSets}\n                onChange={this.changeHandler}\n              ></input>\n              <button\n                style={styles.button}\n                onClick={this.increaseBreakBetweenSets.bind(this)}\n              >\n                +\n              </button>\n            </div>\n            <span style={styles.smallLabel}>Seconds</span>\n          </div>\n        </div>\n\n        <button style={styles.startButton} onClick={this.props.handleStart}>\n          Start\n        </button>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  inputGroup: {\n    marginBottom: \"2em\",\n    texAlign: \"center\",\n  },\n  label: {\n    display: \"block\",\n    fontSize: \"1.5em\",\n    textAlign: \"center\",\n  },\n  smallLabel: {\n    display: \"block\",\n    fontSize: \"0.8em\",\n    letterSpacing: \"0.05em\",\n    color: \"rgba(255,255,255,0.5\",\n    fontWeight: 600,\n    textTransform: \"uppercase\",\n    textAlign: \"center\",\n  },\n  inputLarge: {\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    fontSize: 80,\n    color: \"white\",\n    textAlign: \"center\",\n    width: 100,\n    fontWeight: 500,\n  },\n  buttonLarge: {\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    outline: \"none\",\n    color: \"white\",\n    fontSize: 40,\n    width: 40,\n  },\n  input: {\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    fontSize: 40,\n    color: \"white\",\n    textAlign: \"center\",\n    width: 75,\n    fontWeight: 500,\n  },\n  button: {\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    outline: \"none\",\n    color: \"white\",\n    fontSize: 20,\n    width: 20,\n    cursor: \"pointer\",\n  },\n\n  startButton: {\n    borderRadius: 500,\n    border: \"none\",\n    padding: \"15px 40px\",\n    color: \"white\",\n    backgroundColor: \"#176FF2\",\n    fontSize: 22,\n    display: \"block\",\n    margin: \"20px auto\",\n    cursor: \"pointer\",\n  },\n};\n\nexport default Config;\n","import React from \"react\";\n\nimport moment from \"moment\";\nimport momentDurationFormatSetup from \"moment-duration-format\";\nimport Sound from \"react-sound\";\nimport beeps from \"../Assets/beeps.mp3\";\n\nmomentDurationFormatSetup(moment);\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalTimeRemaining: null,\n      overallTimePercentage: 0,\n      activityTimeRemaining: moment\n        .duration(\n          moment(this.props.timestamps.activityTimestamps[0].endTime).diff(\n            this.props.timestamps.activityTimestamps[0].endTime.startTime\n          )\n        )\n        .format(\"mm:ss\", { trim: false }),\n      activityTimePercentage: 0,\n      currentActivity: this.props.timestamps.activityTimestamps[0],\n      nextActivity: this.props.timestamps.activityTimestamps[1],\n      playBeeps: false,\n      progressBarReset: true,\n    };\n  }\n\n  componentDidMount() {\n    this.updateDisplay();\n    this.setState({ progressBarReset: true });\n    if (this.props.isRunning) {\n      this.interval = setInterval(() => {\n        this.updateDisplay();\n      }, 1000);\n    }\n  }\n\n  updateDisplay() {\n    let timestamps = this.props.timestamps;\n    let now = moment();\n    // If the whole session should have finished, stop\n    if (timestamps.overallEndingTime < now) {\n      this.props.handleStop();\n    } else {\n      //Otherwise\n      // Update the total time remaining and percentage\n      let totalTimeRemaining = moment.duration(\n        moment(timestamps.overallEndingTime).diff(now)\n      );\n      let overallTimePercentage =\n        (1 -\n          moment.duration(\n            moment(timestamps.overallEndingTime).diff(now) /\n              moment.duration(\n                moment(timestamps.overallEndingTime).diff(timestamps.startTime)\n              )\n          )) *\n        100;\n      this.setState({\n        totalTimeRemaining: totalTimeRemaining,\n        overallTimePercentage: overallTimePercentage,\n      });\n      //Check if current activity has finished\n      let currentActivity = this.state.currentActivity;\n      if (moment(currentActivity.endTime).isBefore(now)) {\n        //If it has finished, find the next activity\n        let i;\n        let activityTimes = this.props.timestamps.activityTimestamps;\n        for (i = 0; i < activityTimes.length; i++) {\n          if (\n            moment(activityTimes[i].startTime).isBefore(now) &&\n            moment(activityTimes[i].endTime).isAfter(now)\n          ) {\n            this.setState({\n              currentActivity: activityTimes[i],\n              nextActivity: activityTimes[i + 1]\n                ? activityTimes[i + 1]\n                : { name: \"Finish\" },\n              progressBarReset: true,\n            });\n          }\n        }\n      } else {\n        this.setState({ progressBarReset: false });\n      }\n      let activityTimeRemaining = moment.duration(\n        moment(this.state.currentActivity.endTime).diff(now)\n      );\n      let activityTimePercentage =\n        (1 -\n          moment.duration(\n            moment(this.state.currentActivity.endTime).diff(now)\n          ) /\n            moment.duration(\n              moment(this.state.currentActivity.endTime).diff(\n                this.state.currentActivity.startTime\n              )\n            )) *\n        100;\n\n      if (activityTimeRemaining < 3000) {\n        console.log(activityTimeRemaining);\n        this.setState({ playBeeps: true });\n      }\n      this.setState({\n        activityTimeRemaining: activityTimeRemaining.format(\"mm:ss\", {\n          trim: false,\n        }),\n        activityTimePercentage: activityTimePercentage,\n      });\n    }\n  }\n\n  endBeeps() {\n    this.setState({ playBeeps: false });\n  }\n\n  render() {\n    let currentActivityDuration =\n      moment\n        .duration(\n          moment(this.state.currentActivity.endTime).diff(\n            this.state.currentActivity.startTime\n          )\n        )\n        .asSeconds() - 1;\n    return (\n      <div>\n        {this.state.playBeeps && (\n          <div>\n            <Sound\n              url={beeps}\n              playStatus={Sound.status.PLAYING}\n              volume={this.props.isMuted ? 0 : 100}\n              onFinishedPlaying={this.endBeeps.bind(this)}\n              autoLoad={true}\n            />\n          </div>\n        )}\n        <div\n          style={{\n            backgroundColor:\n              this.state.currentActivity.type === \"exercise\"\n                ? \"#19A763\"\n                : \"#2358A7\",\n            position: \"relative\",\n            height: \"95vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: this.state.progressBarReset ? 0 : \"100%\",\n              height: \"100%\",\n              position: \"absolute\",\n              left: 0,\n              top: 0,\n              bottom: 0,\n              backgroundColor:\n                this.state.currentActivity.type === \"exercise\"\n                  ? \"#22CA7A\"\n                  : \"#176FF2\",\n              transition: this.state.progressBarReset\n                ? \" \"\n                : \"width \" + currentActivityDuration + \"s linear\",\n            }}\n          />\n          {this.state.currentActivity.set && (\n            <span\n              style={{\n                fontSize: \"4vw\",\n                zIndex: 9999,\n                letterSpacing: \"0.1em\",\n                textTransform: \"uppercase\",\n                fontWeight: 600,\n                color: \"rgba(255,255,255,0.75)\",\n              }}\n            >\n              {this.state.currentActivity.set}\n            </span>\n          )}\n          <div\n            class=\"monospace\"\n            style={{\n              fontSize: \"30vw\",\n              fontWeight: 500,\n              color: \"white\",\n              textAlign: \"center\",\n              zIndex: 9999,\n              marginTop: \"-2vw\",\n            }}\n          >\n            {this.state.activityTimeRemaining}\n          </div>\n          <div\n            style={{\n              color: \"white\",\n              fontSize: \"8vw\",\n              zIndex: 999,\n            }}\n          >\n            {this.state.currentActivity.name}\n          </div>\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"5vh\",\n            backgroundColor: \"#2C3137\",\n          }}\n        >\n          <div\n            style={{\n              width: this.state.overallTimePercentage + \"%\",\n              transition: \"width 1s linear\",\n              backgroundColor: \"#49515E\",\n              height: \"100%\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Timer;\n","import React from \"react\";\n\nclass Buttons extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"2vw\",\n          right: \"2vw\",\n        }}\n      >\n        <span\n          onClick={this.props.toggleMute}\n          style={{\n            fontSize: \"2.7vw\",\n            cursor: \"pointer\",\n          }}\n        >\n          {this.props.isMuted ? \"🔕\" : \"🔔\"}\n        </span>\n        <span\n          onClick={this.props.handleStop}\n          style={{\n            fontSize: \"2.5vw\",\n            marginLeft: \"2vw\",\n            cursor: \"pointer\",\n          }}\n        >\n          ❌\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Buttons;\n","import React from \"react\";\nimport Config from \"./Components/Config.js\";\nimport Timer from \"./Components/Timer.js\";\nimport Buttons from \"./Components/Buttons.js\";\nimport moment from \"moment\";\nimport momentDurationFormatSetup from \"moment-duration-format\";\nimport NoSleep from \"nosleep.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: {\n        numberOfExercises: 10,\n        durationOfExercises: 45,\n        durationOfBreak: 15,\n        numberOfSets: 3,\n        breakBetweenSets: 60,\n      },\n      isRunning: false,\n      isPaused: false,\n      currentProgressTimer: 0,\n      currentExercise: \"\",\n      timestamps: {},\n      isMuted: false,\n    };\n  }\n  noSleep = new NoSleep();\n\n  updateConfig(config) {\n    this.setState({ config: config });\n  }\n\n  handleStart() {\n    this.setState({ isRunning: true });\n    this.generateTimestamps();\n    this.noSleep.enable();\n  }\n\n  handleStop() {\n    this.setState({ isRunning: false });\n    this.noSleep.disable();\n  }\n\n  toggleMute() {\n    if (this.state.isMuted) {\n      this.setState({\n        isMuted: false,\n      });\n    } else {\n      this.setState({\n        isMuted: true,\n      });\n    }\n  }\n\n  generateTimestamps() {\n    const now = moment();\n    console.log(now);\n\n    const config = this.state.config;\n\n    let activityTimestamps = [];\n    let totalTimeOfActivity =\n      config.durationOfExercises + config.durationOfBreak;\n    let totalTimeOfSet =\n      totalTimeOfActivity * (config.numberOfExercises - 1) +\n      config.durationOfExercises +\n      config.breakBetweenSets;\n    let totalTime =\n      totalTimeOfSet * config.numberOfSets - config.breakBetweenSets;\n    let overallEndingTime = moment(now).add(moment.duration(totalTime, \"s\"));\n    console.log(\n      totalTimeOfActivity,\n      totalTimeOfSet,\n      overallEndingTime.format(\"h:mm:ss\")\n    );\n    let n;\n    for (n = 0; n < config.numberOfSets; n++) {\n      // Loop through each set\n      let i;\n      for (i = 0; i < config.numberOfExercises; i++) {\n        //Loop theough each activity in each set\n        let name = \"Exercise \" + (i + 1);\n        let startTime = moment(now).add(\n          moment.duration(n * totalTimeOfSet + i * totalTimeOfActivity, \"s\")\n        );\n\n        let endTime = moment(\n          startTime + moment.duration(config.durationOfExercises, \"s\")\n        );\n\n        activityTimestamps.push({\n          type: \"exercise\",\n          name: name,\n          set: \"Set \" + (n + 1),\n          startTime: startTime,\n          endTime: endTime,\n        });\n        // If it's not the last exercise, add a break\n        if (i < config.numberOfExercises - 1) {\n          let breakEndTime = moment(\n            endTime + moment.duration(config.durationOfBreak, \"s\")\n          );\n          activityTimestamps.push({\n            type: \"rest\",\n            name: \"Rest\",\n            set: \"Set \" + (n + 1),\n            startTime: endTime,\n            endTime: breakEndTime,\n          });\n        }\n      }\n      if (n < config.numberOfSets - 1) {\n        let restStartTime =\n          now +\n          moment.duration(\n            (n + 1) *\n              (config.durationOfExercises * config.numberOfExercises +\n                config.durationOfBreak * (config.numberOfExercises - 1)) +\n              config.breakBetweenSets * n,\n            \"s\"\n          );\n        let restEndTime =\n          restStartTime + moment.duration(config.breakBetweenSets, \"s\");\n        activityTimestamps.push({\n          set: \"End of set \" + (n + 1),\n          type: \"restBetweenSets\",\n          name: \"Rest\",\n          startTime: restStartTime,\n          endTime: restEndTime,\n        });\n      }\n    }\n\n    this.setState({\n      timestamps: {\n        startTime: now,\n        overallEndingTime: overallEndingTime,\n        activityTimestamps: activityTimestamps,\n      },\n    });\n  }\n\n  render() {\n    return !this.state.isRunning ? (\n      <Config\n        config={this.state.config}\n        updateConfig={this.updateConfig.bind(this)}\n        handleStart={this.handleStart.bind(this)}\n      />\n    ) : (\n      <div>\n        <Timer\n          config={this.state.config}\n          isRunning={this.state.isRunning}\n          isPaused={this.state.isPaused}\n          timestamps={this.state.timestamps}\n          isMuted={this.state.isMuted}\n        />\n        <Buttons\n          isMuted={this.state.isMuted}\n          toggleMute={this.toggleMute.bind(this)}\n          handleStop={this.handleStop.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}